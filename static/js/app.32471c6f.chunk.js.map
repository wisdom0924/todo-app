{"version":3,"sources":["ToDo.js","App.js","web-build/register-service-worker.js"],"names":["Dimensions","get","width","ToDo","height","props","_toggleComplete","event","stopPropagation","isCompleted","uncompleteTodo","completeTodo","id","_startEditing","setState","isEditing","_finishEditing","toDoValue","state","updateTodo","_controlInput","text","this","deleteToDo","View","style","styles","container","column","TouchableOpacity","onPress","circle","completedCircle","uncompletedCircle","TextInput","input","completedText","uncompletedText","value","multiline","onChangeText","returnKeyType","onBlur","underlineColorAndroid","Text","actions","onPressOut","actionContainer","actionText","deleteText","React","Component","propTypes","PropTypes","string","isRequired","bool","func","StyleSheet","create","borderBottomColor","borderBottomWidth","hairlineWidth","flexDirection","alignItems","justifyContent","borderRadius","borderWidth","marginRight","marginLeft","borderColor","fontWeight","fontSize","marginVertical","color","textDecorationLine","marginHorizontal","paddingBottom","paddingLeft","paddingRight","seed","Math","floor","random","App","newTodo","loadedToDos","toDos","_controlNewToDo","_loadToDos","a","async","AsyncStorage","getItem","parsedToDos","JSON","parse","console","log","_addToDo","prevState","ID","uuidv1","newToDoObject","createdAt","Date","now","newState","newToDo","_saveTodos","_deleteToDo","_uncompleteTodo","_completeTodo","_updateTodo","newToDos","setItem","stringify","KeyboardAvoidingView","behavior","Platform","OS","keyboardVerticalOffset","inner","StatusBar","barStyle","title","card","placeholder","placeholderTextColor","autoCorrect","onSubmitEditing","ScrollView","contentContainerStyle","keyboardShouldPersistTaps","Object","values","sort","b","hasOwnProperty","reverse","map","toDo","key","AppLoading","flex","backgroundColor","marginTop","marginBottom","select","ios","shadowColor","shadowOpacity","shadowRadius","shadowOffset","android","elevation","padding","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.32471c6f.chunk.js","sourcesContent":["import React, { component } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Dimensions,\r\n  TextInput,\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\nexport default class ToDo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      toDoValue: props.text,\r\n    };\r\n  }\r\n  static propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    isCompleted: PropTypes.bool.isRequired,\r\n    deleteToDo: PropTypes.func.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    uncompleteTodo: PropTypes.func.isRequired,\r\n    completeTodo: PropTypes.func.isRequired,\r\n    updateTodo: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { isEditing, toDoValue } = this.state;\r\n    const { text, id, deleteToDo, isCompleted } = this.props;\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.column}>\r\n          <TouchableOpacity onPress={this._toggleComplete}>\r\n            <View\r\n              style={[\r\n                styles.circle,\r\n                isCompleted ? styles.completedCircle : styles.uncompletedCircle,\r\n              ]}\r\n            />\r\n          </TouchableOpacity>\r\n          {isEditing ? (\r\n            <TextInput\r\n              style={[\r\n                styles.text,\r\n                styles.input,\r\n                isCompleted ? styles.completedText : styles.uncompletedText,\r\n              ]}\r\n              value={toDoValue}\r\n              multiline={true}\r\n              onChangeText={this._controlInput}\r\n              returnKeyType={'done'}\r\n              onBlur={this._finishEditing}\r\n              underlineColorAndroid={'transparent'} //3)\r\n            />\r\n          ) : (\r\n            <Text\r\n              style={[\r\n                styles.text,\r\n                isCompleted ? styles.completedText : styles.uncompletedText,\r\n              ]}\r\n            >\r\n              {text}\r\n            </Text>\r\n          )}\r\n        </View>\r\n        {isEditing ? (\r\n          <View style={styles.actions}>\r\n            <TouchableOpacity onPressOut={this._finishEditing}>\r\n              <View style={styles.actionContainer}>\r\n                <Text style={styles.actionText}>✔</Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n        ) : (\r\n          <View style={styles.actions}>\r\n            <TouchableOpacity onPressOut={this._startEditing}>\r\n              <View style={styles.actionContainer}>\r\n                <Text style={styles.actionText}>✏</Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPressOut={(event) => {\r\n                event.stopPropagation;\r\n                deleteToDo(id);\r\n              }}\r\n            >\r\n              <View style={styles.actionContainer}>\r\n                {/* <Text style={styles.actionText}>❌</Text> */}\r\n                <Text style={{ ...styles.actionText, ...styles.deleteText }}>\r\n                  X\r\n                </Text>\r\n              </View>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n\r\n  _toggleComplete = (event) => {\r\n    event.stopPropagation();\r\n    const { isCompleted, uncompleteTodo, completeTodo, id } = this.props;\r\n    if (isCompleted) {\r\n      uncompleteTodo(id);\r\n    } else {\r\n      completeTodo(id);\r\n    }\r\n  };\r\n\r\n  _startEditing = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      isEditing: true,\r\n    });\r\n  };\r\n\r\n  _finishEditing = (event) => {\r\n    event.stopPropagation();\r\n    const { toDoValue } = this.state;\r\n    const { id, updateTodo } = this.props;\r\n    updateTodo(id, toDoValue);\r\n    this.setState({\r\n      isEditing: false,\r\n    });\r\n  };\r\n\r\n  _controlInput = (text) => {\r\n    this.setState({\r\n      toDoValue: text,\r\n    });\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: width - 50,\r\n    borderBottomColor: '#bbb',\r\n    borderBottomWidth: StyleSheet.hairlineWidth,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  circle: {\r\n    width: 24,\r\n    height: 24,\r\n    borderRadius: 12,\r\n    borderWidth: 3,\r\n    marginRight: 16,\r\n    marginLeft: 5,\r\n  },\r\n  completedCircle: {\r\n    borderColor: '#CADEE3',\r\n  },\r\n  uncompletedCircle: {\r\n    borderColor: '#3E6B79',\r\n  },\r\n  text: {\r\n    fontWeight: '600',\r\n    fontSize: 20,\r\n    marginVertical: 20,\r\n  },\r\n  completedText: {\r\n    color: '#bbb',\r\n    textDecorationLine: 'line-through',\r\n  },\r\n  uncompletedText: {\r\n    color: '#353535',\r\n  },\r\n  column: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: width / 2,\r\n  },\r\n  actions: {\r\n    flexDirection: 'row',\r\n  },\r\n  actionContainer: {\r\n    marginVertical: 10,\r\n    marginHorizontal: 10,\r\n  },\r\n  input: {\r\n    width: width / 2,\r\n    marginVertical: 15,\r\n    paddingBottom: 5,\r\n  },\r\n  deleteText: {\r\n    color: '#4E8092',\r\n    fontSize: 20,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n    fontWeight: '800',\r\n  },\r\n});\r\n","import React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  StatusBar,\n  TextInput,\n  Dimensions,\n  Platform,\n  ScrollView,\n  AsyncStorage,\n  KeyboardAvoidingView,\n  // TouchableWithoutFeedback,\n  // Keyboard,\n  // Button,\n} from 'react-native';\nimport { AppLoading } from 'expo';\nimport ToDo from './ToDo';\nimport 'react-native-get-random-values';\nimport { v1 as uuidv1 } from 'uuid';\n\nconst seed = () => {\n  const one = Math.floor((Math.random() * 100) / 3.92);\n  const two = Math.floor((Math.random() * 100) / 3.92);\n  const three = Math.floor((Math.random() * 100) / 3.92);\n  const four = Math.floor((Math.random() * 100) / 3.92);\n  const five = Math.floor((Math.random() * 100) / 3.92);\n  const six = Math.floor((Math.random() * 100) / 3.92);\n  const seven = Math.floor((Math.random() * 100) / 3.92);\n  const eight = Math.floor((Math.random() * 100) / 3.92);\n  const nine = Math.floor((Math.random() * 100) / 3.92);\n  const ten = Math.floor((Math.random() * 100) / 3.92);\n  const eleven = Math.floor((Math.random() * 100) / 3.92);\n  const twelve = Math.floor((Math.random() * 100) / 3.92);\n  const thirteen = Math.floor((Math.random() * 100) / 3.92);\n  const fourteen = Math.floor((Math.random() * 100) / 3.92);\n  const fifteen = Math.floor((Math.random() * 100) / 3.92);\n  const sixteen = Math.floor((Math.random() * 100) / 3.92);\n  return [\n    one,\n    two,\n    three,\n    four,\n    five,\n    six,\n    seven,\n    eight,\n    nine,\n    ten,\n    eleven,\n    twelve,\n    thirteen,\n    fourteen,\n    fifteen,\n    sixteen,\n  ];\n};\nconst { width, height } = Dimensions.get('window');\n\nexport default class App extends React.Component {\n  state = {\n    newTodo: '',\n    loadedToDos: false,\n    toDos: {},\n  };\n\n  componentDidMount() {\n    this._loadToDos();\n  }\n\n  render() {\n    const { newTodo, loadedToDos, toDos } = this.state;\n\n    if (!loadedToDos) {\n      return <AppLoading />;\n    }\n    return (\n      <KeyboardAvoidingView\n        behavior={Platform.OS == 'ios' ? 'padding' : 'height'}\n        keyboardVerticalOffset={20}\n        style={styles.container}\n      >\n        <View style={styles.inner}>\n          <StatusBar barStyle=\"light-content\" />\n\n          <Text style={styles.title}>To Do</Text>\n          <View style={styles.card}>\n            <TextInput\n              style={styles.input}\n              placeholder={'New To Do'}\n              value={newTodo}\n              onChangeText={this._controlNewToDo}\n              placeholderTextColor={'#999'}\n              returnKeyType={'done'}\n              autoCorrect={false}\n              onSubmitEditing={this._addToDo}\n              underlineColorAndroid={'transparent'} //3)\n            />\n            <ScrollView\n              contentContainerStyle={styles.toDos}\n              keyboardShouldPersistTaps=\"always\"\n            >\n              {Object.values(toDos)\n                .sort(function (a, b) {\n                  //1)\n                  if (a.hasOwnProperty('createdAt')) {\n                    return a.createdAt - b.createdAt;\n                  }\n                })\n                .reverse()\n                .map((toDo) => (\n                  <ToDo\n                    key={toDo.id}\n                    {...toDo}\n                    deleteToDo={this._deleteToDo}\n                    uncompleteTodo={this._uncompleteTodo}\n                    completeTodo={this._completeTodo}\n                    updateTodo={this._updateTodo}\n                  />\n                ))}\n            </ScrollView>\n          </View>\n        </View>\n      </KeyboardAvoidingView>\n    );\n  }\n\n  _controlNewToDo = (text) => {\n    this.setState({\n      newTodo: text,\n    });\n  };\n\n  _loadToDos = async () => {\n    try {\n      const toDos = await AsyncStorage.getItem('toDos');\n      const parsedToDos = JSON.parse(toDos);\n      console.log(toDos);\n      this.setState({\n        loadedToDos: true,\n        toDos: parsedToDos || {}, //2)\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  _addToDo = () => {\n    const { newTodo } = this.state;\n\n    if (newTodo !== '') {\n      this.setState({\n        newTodo: '',\n      });\n\n      this.setState((prevState) => {\n        const ID = uuidv1({ random: seed() });\n        const newToDoObject = {\n          [ID]: {\n            id: ID,\n            isCompleted: false,\n            text: newTodo,\n            createdAt: Date.now(),\n          },\n        };\n\n        const newState = {\n          ...prevState,\n          newToDo: '',\n          toDos: {\n            ...prevState.toDos,\n            ...newToDoObject,\n          },\n        };\n        this._saveTodos(newState.toDos);\n        return { ...newState };\n      });\n    }\n  };\n\n  _deleteToDo = (id) => {\n    this.setState((prevState) => {\n      const toDos = prevState.toDos;\n      delete toDos[id];\n      const newState = {\n        ...prevState,\n        ...toDos,\n      };\n      this._saveTodos(newState.toDos);\n      return { ...newState };\n    });\n  };\n\n  _uncompleteTodo = (id) => {\n    this.setState((prevState) => {\n      const newState = {\n        ...prevState,\n        toDos: {\n          ...prevState.toDos,\n          [id]: {\n            ...prevState.toDos[id],\n            isCompleted: false,\n          },\n        },\n      };\n      this._saveTodos(newState.toDos);\n      return { ...newState };\n    });\n  };\n\n  _completeTodo = (id) => {\n    this.setState((prevState) => {\n      const newState = {\n        ...prevState,\n        toDos: {\n          ...prevState.toDos,\n          [id]: {\n            ...prevState.toDos[id],\n            isCompleted: true,\n          },\n        },\n      };\n      this._saveTodos(newState.toDos);\n      return { ...newState };\n    });\n  };\n\n  _updateTodo = (id, text) => {\n    this.setState((prevState) => {\n      const newState = {\n        ...prevState,\n        toDos: {\n          ...prevState.toDos,\n          [id]: {\n            ...prevState.toDos[id],\n            text: text,\n          },\n        },\n      };\n      this._saveTodos(newState.toDos);\n      return { ...newState };\n    });\n  };\n\n  _saveTodos = (newToDos) => {\n    const saveTodos = AsyncStorage.setItem('toDos', JSON.stringify(newToDos));\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#94BFCA',\n    alignItems: 'center',\n  },\n  inner: {\n    flex: 1,\n    justifyContent: 'space-around',\n  },\n  title: {\n    color: 'white',\n    marginTop: 50,\n    fontWeight: '200',\n    fontSize: 36,\n    marginBottom: 30,\n  },\n  card: {\n    // backgroundColor: 'white',\n    flex: 1,\n    width: width - 25,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgba(50,50,50,0.5)',\n        shadowOpacity: 0.5,\n        shadowRadius: 10,\n        shadowOffset: {\n          height: -1,\n          width: 0,\n        },\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n  },\n  input: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    height: 60,\n    borderColor: '#bbb',\n    borderBottomWidth: 1,\n    marginBottom: 5,\n    padding: 20,\n    backgroundColor: 'white',\n  },\n  toDos: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n  },\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/todo-app/expo-service-worker.js', { scope: '/todo-app/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}